plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

// gradle attributes
group = project.property('groupId')
version = '1.0-SNAPSHOT'

java {
    withJavadocJar()
    withSourcesJar()
}

test {
    useJUnitPlatform()
}

repositories {
    mavenCentral()
}

dependencies {

    // This dependency is used for CSV file parsing (read/write)
    implementation group: 'org.apache.metamodel', name: 'MetaModel-core', version: '5.3.0'
    implementation group: 'org.apache.metamodel', name: 'MetaModel-csv', version: '5.3.0'

    // Use JUnit test framework
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.5.1'
    testImplementation group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.5.1'

    // JSON to CSV
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'

    // The apache common utils for file and string handling
    testImplementation group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
    testImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.0'

}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = project.property('artifactId')
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                packaging = 'jar'
                name = project.property('name')
                description = project.property('description')
                url = project.property('gitUrl')
                licenses {
                    license {
                        name = project.property('licenseName')
                        url = project.property('licenseUrl')
                    }
                }
                developers {
                    developer {
                        id = project.property('developerId')
                        name = project.property('developerName')
                        email = project.property('developerEmail')
                    }
                }
                scm {
                    connection = project.property('scmConnection')
                    developerConnection = project.property('scmDeveloperConnection')
                    url = project.property('gitUrl')
                }
            }
        }
    }
    repositories {
        maven {
            url = version.endsWith('SNAPSHOT') ? project.property('snapshotsRepoUrl') : project.property('releasesRepoUrl')
            credentials {
                username = project.property('nexusUsername')
                password = project.property('nexusPassword')
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

tasks.withType(GenerateModuleMetadata) {
    enabled = false
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}